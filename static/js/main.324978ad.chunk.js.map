{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Nav/Nav.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Nav/Nav.jsx","components/News/News.jsx","components/Settings/Settings.jsx","Redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/SendMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/helpFunctions.js","Redux/users-reducer.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/common/Preloader/Preloader.js","components/Users/Users.js","Redux/users-selectors.js","components/Users/UsersContainer.jsx","Redux/auth-reducer.js","components/Login/Login.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","Redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Redux/app-reducer.js","Redux/redux-store.js","App.js","index.js","components/Users/Users.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","classes","nav","item","to","activeClassName","active","friendsMenu","News","props","Settings","messageId","initialState","messages","id","message","style","background","marginLeft","dialogs","name","avatar","dialogsReducer","state","action","type","newMessageBody","DialogItem","dialog","src","Message","messageText","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","maxLength30","AddMessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","inputMessage","Field","aria-label","placeholder","component","validate","Dialogs","dialogsElements","messagesPage","map","d","key","messageElements","m","dialogItems","messageItems","values","undefined","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","users","totalUsersCount","isFetching","followingInProgress","paginatorPage","follow","userId","unfollow","setUsers","setTotalUsersCount","totalCount","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","followType","actionCreator","a","resultCode","usersReducer","followed","currentPaginatorPage","filter","Paginator","totalItemsCount","onPageChanged","portionSize","setPaginatorPage","pagesCount","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","User","card","picture","user","photos","small","disabled","some","unfollowThunk","followThunk","discription","Preloader","role","Users","u","getUsers","usersPage","getPageSize","getPaginatorPage","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","setCurrentPage","login","profileAvatar","profileAvatarPath","setAuthUserData","payload","setProfileAvatar","photo","authReducer","authThunkCreator","minLength2","LoginReduxForm","formSummaryError","loginThunkCreator","stopSubmit","_error","loginForm","formData","ProfileStatus","useState","setStatus","editMode","setEditMode","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","large","fullName","Post","postText","like","likes","NewPostReduxForm","MyPosts","memo","console","log","postElements","posts","likesCount","addPost","newPostBody","postId","newPostText","setUserProfile","getStatus","profileReducer","MyPostsContainer","profilePage","Profile","content","ProfileContainer","params","authorizedUserId","history","getProfile","prevProps","withRouter","Header","header","logo","href","loginContainer","logOutButton","logoutThunkCreator","width","height","viewBox","fill","xmlns","fillRule","HeaderContainer","authThunk","initialized","appReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","combineReducers","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Music","lazy","App","initializeApp","exact","path","render","DialogsContainer","fallback","AppContainer","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.324978ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__346sz\",\"item\":\"Profile_item__1v7UX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3EeHd\",\"item\":\"ProfileInfo_item__oeRZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1cnv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2bLyr\",\"item\":\"Nav_item__1_qcO\",\"active\":\"Nav_active__TqTj0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3TEO_\",\"dialogItems\":\"Dialogs_dialogItems__1S5vk\",\"messageItems\":\"Dialogs_messageItems__1oxPb\",\"dialog\":\"Dialogs_dialog__HCdx1\",\"active\":\"Dialogs_active__1xIh7\",\"message\":\"Dialogs_message__2citk\",\"inputMessage\":\"Dialogs_inputMessage__1l5uN\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport classes from \"./Nav.module.css\";\nimport {  NavLink } from \"react-router-dom\";\n\n\n// панель с навигацией\nconst Nav = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to=\"/profile/\" activeClassName={classes.active}>\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\n          Messages\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/news\" activeClassName={classes.active}>\n          News\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/music\" activeClassName={classes.active}>\n          Music\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/users\" activeClassName={classes.active}>\n          Find users\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to=\"/settings\" activeClassName={classes.active}>\n          Settings\n        </NavLink>\n      </div>\n      <div className={classes.friendsMenu}>\n        {/*<Friends usersPage={props.usersPage}/>*/}\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet messageId = 5;\r\nlet initialState = {\r\n    messages: [\r\n        {\r\n            id: 1, message: 'Hi'\r\n        },\r\n        {\r\n            id: 2, message: 'How are you?'\r\n        },\r\n        {\r\n            id: 3, message: 'I\\'m OK', style: {\r\n                background: '#1c607d',\r\n                marginLeft: '20%'\r\n            }\r\n        },\r\n        {\r\n            id: 4, message: 'How about you?', style: {\r\n                background: '#1c607d',\r\n                marginLeft: '20%'\r\n            }\r\n        }\r\n    ],\r\n    // массив с диалогами\r\n    dialogs: [\r\n        {id: 1, name: 'Igor', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar2700.jpg'},\r\n        {id: 2, name: 'Nikita', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar2506.jpg'},\r\n        {id: 3, name: 'Anton', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar3317.jpg'},\r\n        {id: 4, name: 'Andrey', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar2672.jpg'},\r\n        {id: 5, name: 'Yuli', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar3171.jpg'},\r\n        {id: 6, name: 'Vlad', avatar: 'https://cs16planet.ru/steam-avatars/images/avatar2812.jpg'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:messageId++, message: action.newMessageBody}],\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport let sendMessage = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + \" \" + classes.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.active}><div><img src={props.avatar}/></div><div>{props.name}</div></NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\"\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n\r\n        <div style={props.style} className={classes.message}>\r\n            {props.messageText}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            {props.children}\r\n            {hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n const  {input, meta, ...restProps} = props;\r\nreturn <FormControl{...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const  {input, meta, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined\r\n}","import classes from \"./Dialogs.module.css\";\nimport React from \"react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLength30 = maxLengthCreator(30);\n\n\n\nconst SendMessageForm = (props) => {\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.inputMessage}>\n        <div>\n          <Field\n              className=\"form-control\"  aria-label=\"With textarea\"\n            placeholder={\"Enter your message\"}\n            name={\"newMessageBody\"}\n            component={Textarea}\n              validate={[required, maxLength30]}\n          />\n        </div>\n        <button className=\"btn btn-info\">Send</button>\n      </div>\n    </form>\n  );\n};\n\n\nconst afterSend = (result, dispatch) => {\n    dispatch(reset(\"dialogAddMessageForm\"));\n};\n\n\n\nconst AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\", onSubmitSuccess: afterSend })(\n  SendMessageForm\n);\n\nexport default AddMessageReduxForm;\n","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport Dialog from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageReduxForm from \"./SendMessageForm\";\n\n\n\n\nconst Dialogs = (props) => {\n\n\n  let addNewMessage = (values) => {\n      if (values.newMessageBody !== undefined) {\n          props.sendMessage(values.newMessageBody)\n      }\n };\n\n\n  // преобразовываем полученный массив с диалогами в компоненту список диалогов\n  let dialogsElements = props.messagesPage.dialogs.map((d) => (\n    <Dialog name={d.name} key={d.id} id={d.id} avatar={d.avatar} />\n  ));\n\n  //  преобразовавыем массив с сообщениями в компоненту список сообщений\n  let messageElements = props.messagesPage.messages.map((m) => (\n    <Message messageText={m.message} key={m.id} style={m.style} />\n  ));\n\n  // отрисовываем страницу диалогов\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogItems}>{dialogsElements}</div>\n      <div className={classes.messageItems}>\n        <div>{messageElements}</div>\n        <AddMessageReduxForm onSubmit={addNewMessage}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\n\n\n\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return < Component {...this.props} />;\n    }\n  }\n\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectedAuthRedirectComponent\n};\n","import React from \"react\";\r\nimport {sendMessage} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(connect (mapStateToProps, {sendMessage}), withAuthRedirect)(Dialogs)","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    \"API-KEY\": \"c965f834-d3e0-4bed-acd7-7832ade2de5a\",\n  },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage, pageSize) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then((response) => response.data);\n  },\n\n  follow(id) {\n    return instance.post(`follow/${id}`, {}).then((response) => response.data);\n  },\n\n  unfollow(id) {\n    return instance.delete(`follow/${id}`).then((response) => response.data);\n  },\n};\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance\n            .get(`profile/${id}`).then((response) => response.data)\n},\n    getStatus(id) {\n        return instance\n            .get(`profile/status/${id}`).then((response) => response.data)\n    },\n    updateStatus(status) {\n        return instance\n            .put(`profile/status`, {status: status}).then((response) => response.data)\n    }\n};\n\n\nexport const authAPI = {\n    auth() {\n        return instance\n            .get(`auth/me`).then((response) => response.data)\n    },\n    setAuthProfile(id) {\n\n        return instance\n            .get(`profile/${id}`).then((response) => response.data)\n    },\n    login(email, password, rememberMe) {\n        return instance\n            .post(`auth/login`, {email, password, rememberMe}).then((response) => response.data)\n    },\n    logout() {\n        return instance\n            .delete(`auth/login`).then((response) => response.data);\n    }\n};\n\n\n\n\n","export let updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map((item) => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps};\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/helpFunctions\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nconst SET_PAGINATOR_PAGE = \"SET_PAGINATOR_PAGE\"\n\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [],\n  paginatorPage: 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case SET_PAGINATOR_PAGE:\n      return {\n        ...state,\n        paginatorPage: action.currentPaginatorPage\n      }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount,\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let follow = (userId) => ({ type: FOLLOW, userId });\nexport let unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport let setUsers = (users) => ({ type: SET_USERS, users });\nexport let setCurrentPage = (pageNumber) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage: pageNumber,\n});\nexport let setPaginatorPage = (pageNumber) => ({\n  type: SET_PAGINATOR_PAGE,\n  currentPaginatorPage: pageNumber\n})\nexport let setTotalUsersCount = (totalCount) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount: totalCount,\n});\nexport let toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport let toggleIsFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\n\n\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(currentPage, pageSize)\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n\n\n};\n\n\nconst followUnfollowFlow = async (id, dispatch, followType, actionCreator) => {\n  dispatch(toggleIsFollowingProgress(true, id));\n  let data = await followType(id)\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(id));\n  }\n  dispatch(toggleIsFollowingProgress(false, id));\n}\n\n\nexport const followThunkCreator = (id) => (dispatch) => {\n  followUnfollowFlow(id, dispatch, usersAPI.follow, follow )\n};\n\nexport const unfollowThunkCreator = (id) => (dispatch) => {\n  followUnfollowFlow(id, dispatch, usersAPI.unfollow, unfollow )\n};\n\n\nexport default usersReducer;\n","import React from \"react\";\nimport classes from \"./Users.module.css\";\n\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage = 1,\n  onPageChanged,\n  portionSize = 30,\n  paginatorPage = 1,\n  setPaginatorPage,\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let leftPortionPageNumber = (paginatorPage - 1) * portionSize + 1;\n  let rightPortionPageNumber = paginatorPage * portionSize;\n  return (\n    <div className={classes.pagesCount}>\n      {paginatorPage > 1 && (\n        <button\n          onClick={() => {\n            setPaginatorPage(paginatorPage - 1);\n          }}\n        >\n          PREV\n        </button>\n      )}\n      {pages\n        .filter(\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n        )\n        .map((p) => {\n          return (\n            <span\n              key={p}\n              className={currentPage === p ? classes.selectedPage : classes}\n              onClick={() => {\n                onPageChanged(p);\n              }}\n            >\n              {\" \"}\n              {p}\n            </span>\n          );\n        })}\n      {portionCount > paginatorPage && (\n        <button\n          onClick={() => {\n            setPaginatorPage(paginatorPage + 1);\n          }}\n        >\n          NEXT\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Paginator;\n","import classes from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst User = (props) => {\r\n   return ( <div className={classes.card}>\r\n        <div className={classes.picture}>\r\n            <NavLink to={\"/profile/\" + props.user.id}>\r\n                <img\r\n                    src={\r\n                        props.user.photos.small != null\r\n                            ? props.user.photos.small\r\n                            : \"https://cs16planet.ru/steam-avatars/images/avatar449.jpg\"\r\n                    }\r\n                />\r\n            </NavLink>\r\n\r\n            <div>\r\n                {props.user.followed ? (\r\n                    <button\r\n                        disabled={props.followingInProgress.some((id) => id === props.user.id)}\r\n                        onClick={() => {\r\n                            props.unfollowThunk(props.user.id);\r\n                        }}\r\n                    >\r\n                        unfollow\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        disabled={props.followingInProgress.some((id) => id === props.user.id)}\r\n                        onClick={() => {\r\n                            props.followThunk(props.user.id);\r\n                        }}\r\n                    >\r\n                        follow\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div className={classes.discription}>\r\n                <div>{props.user.name}</div>\r\n                <div>{props.user.status}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\nimport Paginator from \"./Paginator\";\nimport User from \"./User\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\n\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, setPaginatorPage, paginatorPage, ...props}) => {\n\n  return (\n    <div>\n     <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} setPaginatorPage={setPaginatorPage} paginatorPage={paginatorPage}/>\n     <div>\n         {props.isFetching ?\n             <Preloader /> :\n             ( users.map((u) => (\n       <User user={u}\n              followingInProgress={props.followingInProgress}\n              key={u.id}\n              unfollow={props.unfollow}\n              follow={props.follow}/>\n      )))}\n     </div>\n    </div>\n  );\n};\n\nexport default Users;\n","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getPaginatorPage = (state) => {\r\n    return state.usersPage.paginatorPage;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    follow,\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage, setPaginatorPage,\n    setTotalUsersCount,\n    setUsers,\n    toggleIsFetching,\n    toggleIsFollowingProgress,\n    unfollow,\n    unfollowThunkCreator,\n} from \"../../Redux/users-reducer\";\nimport Users from \"./Users.js\";\nimport { compose } from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize, getPaginatorPage,\n\n    getTotalUsersCount,\n    getUsers,\n} from \"../../Redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.getUsers(pageNumber, this.props.pageSize);\n    this.props.setCurrentPage(pageNumber);\n  };\n\n\n\n  render() {\n    return (\n      <>\n\n          <Users\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            portionSize = {this.props.portionSize}\n            currentPage={this.props.currentPage}\n            paginatorPage={this.props.paginatorPage}\n            onPageChanged={this.onPageChanged}\n            setPaginatorPage={this.props.setPaginatorPage}\n            users={this.props.users}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            followingInProgress={this.props.followingInProgress}\n            followThunk={this.props.followThunk}\n            unfollowThunk={this.props.unfollowThunk}\n            isFetching={this.props.isFetching}\n\n          />\n        )}\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n      paginatorPage: getPaginatorPage(state)\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n      setPaginatorPage,\n    setTotalUsersCount,\n    toggleIsFetching,\n    toggleIsFollowingProgress,\n    getUsers: getUsersThunkCreator,\n    followThunk: followThunkCreator,\n    unfollowThunk: unfollowThunkCreator,\n  })\n)(UsersContainer);\n","import { authAPI } from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SET_PROFILE_AVATAR = \"SET_PROFILE_AVATAR\";\nconst LOGIN_IS_TRUE = \"LOGIN_IS_TRUE\";\n\nlet initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false,\n  profileAvatar: false,\n  profileAvatarPath: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_PROFILE_AVATAR:\n      return {\n        ...state,\n        profileAvatarPath: action.profileAvatarPath,\n        profileAvatar: true,\n      };\n    case LOGIN_IS_TRUE:\n      return {\n        ...state,\n        isAuth: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport let setAuthUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: { id, email, login, isAuth },\n});\nexport let setProfileAvatar = (photo) => ({\n  type: SET_PROFILE_AVATAR,\n  profileAvatarPath: photo,\n});\nexport let loginIsTrue = () => ({ type: LOGIN_IS_TRUE });\n\nexport default authReducer;\n\nexport const authThunkCreator = () => async (dispatch) => {\n\n let data = await authAPI.auth();\n    if (data.resultCode === 0) {\n      let { id, email, login } = data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n      authAPI.setAuthProfile(id).then((data) => {\n        dispatch(setProfileAvatar(data.photos.small));\n      });\n    }\n};\n\nexport const loginThunkCreator = (email, password, rememberMe) => async (dispatch) => {\n  let data = await authAPI.login(email, password, rememberMe);\n    if (data.resultCode === 0) {\n      dispatch(authThunkCreator());\n    } else {\n      let message = data.messages.length > 0 ? data.messages[0] : \"Common wrong\"\n     dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n};\n\nexport const logoutThunkCreator = () => async (dispatch) => {\n let data = await authAPI.logout()\n    if (data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n","import React from \"react\";\nimport classes from \"./Login.module.css\";\nimport { Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {minLengthCreator, required} from \"../../utils/validators/validators\";\nimport {loginThunkCreator} from \"../../Redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst minLength2 = minLengthCreator(3)\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field placeholder={\"Login\"} name={\"email\"} component={Input}  validate={[required, minLength2]}/>\n      </div>\n      <div>\n        <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input} validate={[required, minLength2]}/>\n      </div>\n      <div>\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} />\n        remember me\n      </div>\n        {error && <div className={classes.formSummaryError}>\n            {error}\n        </div>}\n      <div>\n        <button>Log in</button>\n      </div>\n    </form>\n  );\n};\n\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n      let {email, password, rememberMe} = formData;\n      props.loginThunkCreator(email, password, rememberMe);\n  };\n\n    if (props.isAuth) {\n        return <Redirect to={\"profile\"}/>\n    }\n\n  return (\n    <div className={classes.loginForm}>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  form: \"login\"\n})(LoginForm);\n\nconst mapStateToProps = (state) => ({\n        isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);\n","import React, { useState, useEffect } from \"react\";\n\nconst ProfileStatus = (props) => {\n  const [status, setStatus] = useState(props.status);\n  const [editMode, setEditMode] = useState(false);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n  return (\n    <div>\n      {!editMode ? (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"-----\"}{\" \"}\n          </span>\n        </div>\n      ) : (\n        <div >\n          <input\n              autoFocus={true}\n              onBlur={deactivateEditMode}\n            value={status}\n            onChange={onStatusChange}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n       if (!props.profile){\r\n        return <Preloader/>\r\n    } else {\r\n        return <div>\r\n            <div><img src={'/images/main_image.png'}/>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <div><img src={!props.profile.photos.large ? \"https://cs16planet.ru/steam-avatars/images/avatar449.jpg\" : props.profile.photos.large}/></div>\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={classes.item}>\r\n        {props.postText}\r\n        <div className={classes.like}>\r\n            like {props.likes}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst minLength2 = minLengthCreator(3)\r\n\r\nconst NewPostForm = (props) => {\r\n    return ( <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field\r\n               className=\"form-control\"\r\n                aria-label=\"With textarea\"\r\n                placeholder={\"Enter your post\"}\r\n                name={\"newPostBody\"}\r\n                component={Textarea}\r\n                validate={[required, maxLength30, minLength2]}\r\n            />\r\n\r\n    <div>\r\n        <button className=\"btn btn-info\">add post</button>\r\n    </div>\r\n        </form>\r\n)\r\n}\r\n\r\n\r\nconst afterSend = (result, dispatch) => {\r\n    dispatch(reset(\"profileNewPostForm\"));\r\n};\r\n\r\n\r\n\r\nconst NewPostReduxForm = reduxForm({ form: \"profileNewPostForm\", onSubmitSuccess: afterSend })(\r\n    NewPostForm\r\n);\r\n\r\n\r\n\r\nexport default NewPostReduxForm;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport NewPostForm from \"./NewPostForm\";\n\n// отрисовываем полученные посты\nconst MyPosts= React.memo (props => {\n    console.log(\"render\");\n    let addNewPost = (values) => {\n        props.addPost(values.newPostBody);\n    };\n\n    // с помощью мапа преобразовываем полученный массив в пост\n    let postElements = props.posts.map((p) => (\n        <Post postText={p.post} key={p.id} likes={p.likesCount}/>\n    ));\n    // блок с постами\n    return (\n        <div className={classes.item}>\n            <h3>My posts</h3>\n            <NewPostForm onSubmit={addNewPost}/>\n            <div>New posts</div>\n            {postElements}\n        </div>\n    );\n});\n\nexport default MyPosts;\n","import {profileAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst GET_STATUS = 'GET_STATUS'\r\n\r\n\r\nlet postId = 5\r\n\r\n\r\nlet initialState = {\r\n    // массив с информацией о постах\r\n    posts: [\r\n        {id: 1, post: 'hello', likesCount: 10},\r\n        {id: 2, post: 'how are you?', likesCount: 15},\r\n        {id: 3, post: 'it\\'s very nice', likesCount: 5}\r\n    ],\r\n    //набранный в текстареа текст\r\n    newPostText: '',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: postId++, post: action.newPostBody, likesCount: 0}],\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            };\r\n        case GET_STATUS:\r\n\r\n            return{\r\n                ...state, status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostBody) => ({ type: ADD_POST, newPostBody})\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\nexport const getStatus = (status) => ({type: GET_STATUS, status})\r\n\r\n\r\nexport const getProfileThunkCreator = (userId) => async (dispatch) => {\r\n    if (userId) {\r\n     let data = await profileAPI.getProfile(userId)\r\n                 dispatch(setUserProfile(data));\r\n    }\r\n    };\r\n\r\nexport const getStatusThunkCreator = (userId) => async (dispatch) => {\r\n    if (userId) {\r\n        let data = await profileAPI.getStatus(userId)\r\n        dispatch(getStatus(data));\r\n    }\r\n    }\r\n\r\n\r\nexport const updateStatusThunkCreator = (status) => async (dispatch) => {\r\n     let data = profileAPI.updateStatus(status)\r\n                if (data.resultCode === 0) {\r\n                    dispatch(getStatus(status))\r\n                }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n// отрисовываем страницу профиля\r\nconst Profile = (props) => {\r\n    return <div className={classes.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getProfileThunkCreator,\n  getStatusThunkCreator,\n  setUserProfile,\n  updateStatusThunkCreator,\n} from \"../../Redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\n\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.props.getProfile(this.props.authorizedUserId);\n    }\n    if (this.props.authorizedUserId !== prevProps.authorizedUserId) {\n      this.props.getProfile(this.props.authorizedUserId);\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getProfile: getProfileThunkCreator,\n    getStatus: getStatusThunkCreator,\n    updateStatus: updateStatusThunkCreator,\n  }),\n  withRouter\n)(ProfileContainer);\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n<div className={classes.logo}>\r\n            <a href=\"/profile\"><h1><img src={\"/images/logo.png\"}/> MySocialNetwork</h1></a>\r\n</div>\r\n\r\n            {props.isAuth ? (props.profileAvatar ? <div className={classes.loginContainer}><img src={(() => {if (!props.profileAvatarPath){return \"https://cs16planet.ru/steam-avatars/images/avatar449.jpg\"} else {return props.profileAvatarPath}})()}/><div className={classes.logOutButton}><button onClick={props.logoutThunkCreator}>Logout</button></div></div>  :  <Preloader/> ) :\r\n            <NavLink to={'/login'}>\r\n                <svg  width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className={\"bi bi-key\"} fill=\"currentColor\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\"/>\r\n                    <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                </svg></NavLink>}\r\n\r\n\r\n    </header>\r\n}\r\nexport default Header;\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport {authThunkCreator, logoutThunkCreator, setAuthUserData, setProfileAvatar} from \"../../Redux/auth-reducer\";\n\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n      this.props.authThunk();\n  }\n\n  render() {\n    return <Header {...this.props} />;\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n  profileAvatar: state.auth.profileAvatar,\n  profileAvatarPath: state.auth.profileAvatarPath,\n});\n\nexport default connect(mapStateToProps, { setAuthUserData, setProfileAvatar, authThunk: authThunkCreator, logoutThunkCreator })(\n  HeaderContainer\n);\n","import { authThunkCreator } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n\nlet initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport let initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS,\n});\n\nexport default appReducer;\n\nexport const initializeApp = () => async (dispatch) => {\n  await dispatch(authThunkCreator());\n    dispatch(initializedSuccess());\n};\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport friendsNavReducer from \"./friends-nav-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers, composeEnhancer(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { Suspense } from \"react\";\nimport \"./App.scss\";\nimport Nav from \"./components/Nav/Nav\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport { withRouter, BrowserRouter, Route } from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <BrowserRouter>\n        <div className={\"app-wrapper\"}>\n          <HeaderContainer />\n          <Nav />\n          <div className={\"app-wrapper-content\"}>\n            <Route exact path=\"/\" render={() => <ProfileContainer />} />\n            <Route\n              exact\n              path=\"/profile/:userId?\"\n              render={() => <ProfileContainer />}\n            />\n            <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n            <Route path=\"/news\" component={News} />\n            <Suspense fallback={<Preloader />}>\n              <Route path=\"/music\" component={Music} />\n            </Suspense>\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/login\" render={() => <LoginPage />} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nlet SamuraiJsApp = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default SamuraiJsApp;\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SamuraiJsApp from \"./App\";\n\n\n\n    ReactDOM.render(\n        <SamuraiJsApp/>,\n        document.getElementById('root')\n    );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Users_card__2Abjk\",\"picture\":\"Users_picture__o9d66\",\"discription\":\"Users_discription__2KkKE\",\"pagesCount\":\"Users_pagesCount__1iUsV\",\"selectedPage\":\"Users_selectedPage__1L1yN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1WuYJ\",\"logo\":\"Header_logo__1p7U2\",\"loginContainer\":\"Header_loginContainer__2C6iz\",\"logOutButton\":\"Header_logOutButton__10EXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3t3Zo\",\"error\":\"FormsControls_error__IDypI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3YhRa\",\"formSummaryError\":\"Login_formSummaryError__bFimJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2gUiT\",\"like\":\"Post_like__F7VXP\"};"],"sourceRoot":""}